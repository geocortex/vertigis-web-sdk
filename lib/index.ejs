<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta http-equiv="X-UA-Compatible" content="ie=edge" />
        <title>Geocortex Web SDK Preview</title>
        <style>
            body,
            html {
                height: 100%;
            }

            body {
                padding: 0;
                margin: 0;
                overflow: hidden;
            }

            iframe {
                display: block;
                width: 100%;
                height: 100%;
                border: none;
            }
        </style>
    </head>
    <body>
        <iframe
            src="/viewer/index.html?debug=true#no-bootstrap"
            onload="iframeLoaded(event)"
        ></iframe>
        <script>
            function iframeLoaded(event) {
                const webpackFiles = <%= JSON.stringify(htmlWebpackPlugin.files) %>;
                const customLibraryName = <%= JSON.stringify(htmlWebpackPlugin.options.libraryName) %>;
                const iframeDocument = event.target.contentDocument;
                const iframeWindow = event.target.contentWindow;

                if (!iframeWindow.require) {
                    console.error("Geocortex Web frame failed to load");
                    return;
                }

                iframeWindow.require(["require", "gwv"], function(require, webViewer) {
                    function getAbsoluteUrl(relativePath) {
                        const a = document.createElement("a");
                        a.href = relativePath;
                        return a.href;
                    }

                    // Load common web libs as well as our custom bundle
                    require([
                        "@geocortex/web-libraries!/common",
                        "@geocortex/web-libraries!/web",
                        webpackFiles.js[0]
                    ], (
                        ...libs
                    ) => {
                        const options = {
                            appConfig: getAbsoluteUrl("app.json"),
                            layout: getAbsoluteUrl("layout.xml"),
                            libraries: libs.map(lib => lib.default),
                        }

                        const urlParams = new URLSearchParams(window.location.search);
                        options.locale = urlParams.get("locale");

                        webViewer.bootstrap(options);
                    });
                });
            }

            (function() {
                const iframe = document.querySelector("iframe");
                const iframeDocument = iframe.contentDocument;
                const iframeWindow = iframe.contentWindow;

                const hookReactDevTools = () => {
                    // Hook in React Dev Tools support
                    iframeWindow.__REACT_DEVTOOLS_GLOBAL_HOOK__ =
                        window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
                };

                if (iframeDocument.readyState === "loading") {
                    iframe.contentDocument.addEventListener("DOMContentLoaded", hookReactDevTools);
                } else {
                    hookReactDevTools();
                }
            })();
        </script>
    </body>
</html>
